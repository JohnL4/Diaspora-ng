{
  "rules": {
    "users": {
      "$userUid": {
        ".read": "auth.uid == $userUid",
        ".write": "auth.uid == $userUid"
      }
    },
    "usersPublic": {
      ".read": "true",
      "$userUid": {
        ".write": "auth.uid == $userUid"
      }
    },
    "clusters": {
      "$clusterUuid": {
        ".write": "data.val() == null && auth != null || data.val() != null && newData.val() != null && newData.parent().parent().child('clusterData').child($clusterUuid).child('writers').child(auth.uid).val() != null || data.val() != null && newData.val() == null && newData.parent().parent().child('clusterData').child($clusterUuid).child('writers').child(auth.uid).val() != null",
        ".read": "root.child('clusterData').child($clusterUuid).child('readers').child(auth.uid).val() != null"
      }
    },
    "clusterData": {
      "$clusterUuid": {
        ".write": "data.val() == null && auth != null || data.val() != null && newData.val() != null && newData.parent().parent().child('clusterData').child($clusterUuid).child('writers').child(auth.uid).val() != null || data.val() != null && newData.val() == null && newData.parent().parent().child('clusterData').child($clusterUuid).child('writers').child(auth.uid).val() != null",
        ".read": "root.child('clusterData').child($clusterUuid).child('readers').child(auth.uid).val() != null"
      }
    },
    "clusterNames": {
      ".read": "auth != null",
      ".write": "auth != null"
    }
  }
}
